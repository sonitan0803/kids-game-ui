name: Release

on:
    push:
        tags:
            - "v*"

permissions:
    contents: write
    pull-requests: write

jobs:
    release:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Set up Node.js (latest)
              uses: actions/setup-node@v3
              with:
                  node-version: "latest"

            - name: Install pnpm
              run: npm install -g pnpm

            - name: Cache pnpm modules
              uses: actions/cache@v3
              with:
                  path: ~/.pnpm-store
                  key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-

            - name: Install dependencies
              run: pnpm install

            - name: Version packages
              run: pnpm changeset version
              env:
                  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

            - name: Build packages
              run: pnpm run build

            - name: Log in to npm
              run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

            - name: Verify npm authentication
              run: npm whoami
              continue-on-error: false

            - name: Publish packages
              run: pnpm publish --access public --no-git-checks --filter "@kids-game-ui/*"

            - name: Commit version bumps and remove changesets
              run: |
                  git config user.name "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"
                  git rm .changeset/*.md || true
                  git add .
                  git commit -m "chore(release): apply version changes and clean changesets" || echo "No changes to commit"

            - name: Push changes to main
              run: git push origin HEAD:main

            - name: Extract latest changelog entry
              id: changelog
              run: |
                  PACKAGE_DIR="packages/react" # 必要に応じて変更
                  changelog=$(awk '/^## /{i++}i==2{exit}i==1' $PACKAGE_DIR/CHANGELOG.md)
                  echo "changelog<<EOF" >> $GITHUB_OUTPUT
                  echo "$changelog" >> $GITHUB_OUTPUT
                  echo "EOF" >> $GITHUB_OUTPUT

            - name: Create GitHub release
              uses: actions/create-release@v1
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Release ${{ github.ref }}
                  body: ${{ steps.changelog.outputs.changelog }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
